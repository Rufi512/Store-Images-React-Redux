{"version":3,"sources":["components/localStorage.js","store.js","components/Bar.jsx","components/Cards.jsx","components/Favorites.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","imgs","pictures","likes","serializedState","localStorage","getItem","JSON","parse","loadStorageLike","favorites","loadStorageFavorites","createStore","state","action","type","elm","e","target","fill","querySelector","find","id","img","classList","remove","filter","add","concat","likeButton","like","style","animation","setTimeout","Bar","borderBar","line","document","explore","left","offsetLeft","width","offsetWidth","innerHTML","transform","className","onClick","connect","favs","dispatch","addFavorite","addLike","margin","map","fav","background","colorBack","key","name","src","url","alt","undefined","App","store","subscribe","initialSave","stringify","setItem","saveFavoriteToLocalStorage","getState","saveLikeToLocalStorage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2581012e.chunk.js","sourcesContent":["export function loadStorageFavorites (){\r\n\tconst serializedState = localStorage.getItem('favorites')\r\n\tif(serializedState === null){\r\n\t\treturn {favorites:[]};\r\n\t}else{\r\n\t\treturn JSON.parse(serializedState)\r\n\t}\r\n}\r\n\r\nexport function loadStorageLike(){\r\n\tconst serializedState = localStorage.getItem('likes')\r\n\tif(serializedState === null){\r\n\t\treturn{likes:[]};\r\n\t}else{\r\n\t\treturn JSON.parse(serializedState)\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport const saveFavoriteToLocalStorage = (img)=>{\r\nconst initialSave = JSON.stringify(img)\r\nlocalStorage.setItem('favorites',initialSave)\r\n}\r\n\r\nexport const saveLikeToLocalStorage = (img)=>{\r\nconst initialSave = JSON.stringify(img)\r\nlocalStorage.setItem('likes',initialSave)\r\n}","import { createStore } from 'redux'\r\nimport pictures from './components/data/Pictures.json'\r\nimport { loadStorageLike, loadStorageFavorites } from './components/localStorage'\r\n\r\n\r\nconst initialState = {\r\n\r\n    imgs: pictures,\r\n\r\n    likes: loadStorageLike().likes,\r\n\r\n    favorites: loadStorageFavorites().favorites\r\n\r\n}\r\n\r\nconst reducerImages = (state = initialState, action) => {\r\n\r\n    const favorites = state.favorites\r\n\r\n    if (action.type === 'ADD_FAVORITE') {\r\n\r\n        const elm = action.e.target\r\n        const fill = elm.querySelector('.fill-after')\r\n\r\n        if (favorites.find((favorites) => favorites.id === action.img.id)) {\r\n            fill.classList.remove('fill-after-add')\r\n\r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.filter(img => img.id !== action.img.id)\r\n            }\r\n        } else {\r\n\r\n            fill.classList.add('fill-after-add')\r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.concat(action.img)\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === 'REMOVE') {\r\n        return {\r\n            ...state,\r\n            favorites: state.favorites.filter(img => img.id !== action.img.id)\r\n        }\r\n    }\r\n\r\n\r\n    if (action.type === 'ADD_LIKE') {\r\n        const likeButton = action.e.target\r\n        const likes = state.likes\r\n\r\n        if (likes.find((like) => like.id === action.like.id)) {\r\n            likeButton.classList.remove('fa-heart-after')\r\n            likeButton.style.animation = ''\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(img => img.id !== action.like.id)\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            likeButton.style.animation = 'jump-heart 0.5s linear'\r\n            setTimeout(() => { likeButton.classList.add('fa-heart-after') }, 500)\r\n            return {\r\n                ...state,\r\n                likes: state.likes.concat(action.like)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default createStore(reducerImages)","import React from 'react'\r\n\r\nconst Bar = () =>{\r\n\r\nfunction borderBar(e){\r\n const line = document.querySelector('#line')\r\n const explore = document.querySelector('.explore')\r\n const favorites = document.querySelector('.favorites')\r\n line.style.left = e.offsetLeft + 'px'\r\n line.style.width = e.offsetWidth + 'px'\r\n if(e.innerHTML === \"Explore\"){\r\n     explore.style.transform = 'translateX(0%)';\r\n     favorites.style.transform = 'translateX(100%)'\r\n }else{\r\n      explore.style.transform = 'translateX(-100%)';\r\n     favorites.style.transform = 'translateX(0%)'\r\n }\r\n}\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"header\">\r\n    <h1>Pic Store</h1>\r\n    <div><nav>\r\n    \t<ul>\r\n    \t\t<li onClick={e=>{borderBar(e.target)}}>Explore</li>\r\n    \t\t<li onClick={e=>{borderBar(e.target)}}>Favorites</li>\r\n            <div id=\"line\"></div>\r\n    \t</ul>\r\n    </nav></div>\r\n    </div>)\r\n}\r\n\r\nexport default Bar","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Cards = ({imgs,favs,likes,addFavorite,addLike}) =>(\r\n      <div className=\"explore\">\r\n       <h2 style={{margin:'20px'}}>Explore</h2>\r\n      <div className=\"container-cards\">\r\n             { imgs.map((img)=>{\r\n                   const fav = favs.find(favs => favs.id === img.id)\r\n                   const like = likes.find(likes => likes.id === img.id)\r\n                 \r\n                  return(\r\n                <div className=\"card\" style={{background:img.colorBack}}key={img.id} >\r\n                    <h3>{img.name}</h3>\r\n                    <div className=\"card-body\">\r\n                          <img src={img.url} alt={img.name}/>\r\n                    </div>\t\r\n                    <div className=\"card-after\">\r\n                    <div className=\"container-icon\" onClick={e => {addLike(e,img)}}>   <i className={like ? \"fas fa-heart fa-heart-after\" :  \"fas fa-heart\"}></i> </div>\r\n                    <div className=\"container-icon\" onClick={e => {addFavorite(e,img)}}>  <div className=\"fill\"><i className=\"fas fa-star\"><div className={fav ? \"fill-after fill-after-add\":\"fill-after\"}></div></i> </div> </div>\r\n                    </div>\r\n             \t</div>\r\n             \t)\r\n            })\r\n             \t\r\n             }\r\n      </div>\r\n      </div>\r\n\r\n\t)\r\n\r\nconst mapStateToProps = state =>({\r\n\timgs:state.imgs,\r\n  favs:state.favorites,\r\n  likes:state.likes\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\naddFavorite(e,img){\r\n  dispatch({\r\n    type: 'ADD_FAVORITE',\r\n    e,img\r\n  })\r\n},\r\n\r\naddLike(e,like){\r\n  dispatch({\r\n    type: 'ADD_LIKE',\r\n    e,like\r\n  })\r\n\r\n\r\n\r\n\r\n}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//You have nothing added to favorites\r\nconst Favorites = ({favorites,remove}) =>{\r\n  if(favorites[0] === undefined){\r\n    return(\r\n      <div className=\"favorites\">\r\n      <h2 style={{margin:'20px'}}>Favorites</h2>\r\n      <div className=\"msj\">\r\n      <p>You have nothing added to favorites</p>\r\n      </div>\r\n      </div>\r\n      )\r\n  }\r\n  \r\n  \r\n return (\r\n  <div className=\"favorites\">\r\n        <h2 style={{margin:'20px'}}>Favorites</h2>\r\n\r\n        <div className=\"container-cards\">\r\n\r\n             { favorites.map((img)=>{\r\n\r\n               return ( <div className=\"card\" style={{background:img.colorBack}}key={img.id} >\r\n                    <h3>{img.name}</h3>\r\n                    <div className=\"card-body\">\r\n                          <img src={img.url} alt={img.name}/>\r\n                    </div>  \r\n                    <div className=\"card-footer\">\r\n                      <button type=\"button\" onClick={e => remove(img)}>Remove</button>\r\n                    </div>\r\n               </div>)\r\n\r\n             \t})\r\n             \t\r\n             }\r\n      </div>\r\n                         \r\n</div>\r\n)\r\n\t\r\n}\r\nconst mapStateToProps = state =>({\r\n\tfavorites:state.favorites\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n          \r\n          remove(img){\r\n          \tdispatch({\r\n          \t\ttype:'REMOVE',\r\n          \t\timg\r\n          \t})\r\n          }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Favorites)","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store'\r\nimport Bar from './components/Bar'\r\nimport Cards from './components/Cards'\r\nimport Favorites from './components/Favorites'\r\nimport {saveFavoriteToLocalStorage,saveLikeToLocalStorage} from './components/localStorage'\r\nfunction App() {\r\n\r\n  store.subscribe(() => {\r\n  saveFavoriteToLocalStorage({\r\n    favorites: store.getState().favorites\r\n  })\r\n\r\n   saveLikeToLocalStorage({\r\n    likes: store.getState().likes\r\n  })\r\n\r\n})\r\n\r\n  return (\r\n  \t<Provider store={store}>\r\n    <div className=\"container\">\r\n    <Bar/>\r\n      <Cards/>\r\n      <Favorites/>\r\n      </div>\r\n    </Provider>\r\n  );\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './components/styles/style.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}