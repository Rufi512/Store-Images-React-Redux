{"version":3,"sources":["components/localStorage.js","components/SomethingFunctions.js","store.js","components/Bar.jsx","components/Cards.jsx","components/Favorites.jsx","App.js","serviceWorker.js","index.js"],"names":["waitingToRefresh","initialState","imgs","pictures","likes","serializedState","localStorage","getItem","JSON","parse","loadStorageLike","favorites","loadStorageFavorites","createStore","state","action","type","elm","e","target","fill","querySelector","find","id","img","classList","remove","filter","add","concat","likeButton","like","style","animation","setTimeout","waitingToSet","setScroll","section","clearTimeout","timers","containers","document","querySelectorAll","el","scrollHeight","window","screen","height","push","Bar","borderBar","line","container","left","offsetLeft","width","offsetWidth","innerHTML","transform","className","onClick","connect","favs","dispatch","addFavorite","addLike","margin","map","fav","background","colorBack","key","name","src","url","alt","undefined","App","store","subscribe","initialSave","stringify","setItem","saveFavoriteToLocalStorage","getState","saveLikeToLocalStorage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"87BAoBO,ICpBHA,ECKEC,EAAe,CAEjBC,KAAMC,EAENC,MFAG,WACN,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,OAAuB,OAApBF,EACI,CAACD,MAAM,IAENI,KAAKC,MAAMJ,GELTK,GAAkBN,MAEzBO,UFXG,WACN,IAAMN,EAAkBC,aAAaC,QAAQ,aAC7C,OAAuB,OAApBF,EACK,CAACM,UAAU,IAEXH,KAAKC,MAAMJ,GEMLO,GAAuBD,WA4EvBE,eAxEO,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCAE9CJ,EAAYG,EAAMH,UAExB,GAAoB,iBAAhBI,EAAOC,KAAyB,CAEhC,IAAMC,EAAMF,EAAOG,EAAEC,OACfC,EAAOH,EAAII,cAAc,eAE/B,OAAIV,EAAUW,MAAK,SAACX,GAAD,OAAeA,EAAUY,KAAOR,EAAOS,IAAID,OAC1DH,EAAKK,UAAUC,OAAO,kBAEf,2BACAZ,GADP,IAEIH,UAAWG,EAAMH,UAAUgB,QAAO,SAAAH,GAAG,OAAIA,EAAID,KAAOR,EAAOS,IAAID,UAInEH,EAAKK,UAAUG,IAAI,kBACZ,2BACAd,GADP,IAEIH,UAAWG,EAAMH,UAAUkB,OAAOd,EAAOS,QAOrD,GAAoB,WAAhBT,EAAOC,KACP,OAAO,2BACAF,GADP,IAEIH,UAAWG,EAAMH,UAAUgB,QAAO,SAAAH,GAAG,OAAIA,EAAID,KAAOR,EAAOS,IAAID,QAKvE,GAAoB,aAAhBR,EAAOC,KAAqB,CAC5B,IAAMc,EAAaf,EAAOG,EAAEC,OACtBf,EAAQU,EAAMV,MAEpB,OAAIA,EAAMkB,MAAK,SAACS,GAAD,OAAUA,EAAKR,KAAOR,EAAOgB,KAAKR,OAC7CO,EAAWL,UAAUC,OAAO,kBAC5BI,EAAWE,MAAMC,UAAY,GACtB,2BACAnB,GADP,IAEIV,MAAOU,EAAMV,MAAMuB,QAAO,SAAAH,GAAG,OAAIA,EAAID,KAAOR,EAAOgB,KAAKR,UAM5DO,EAAWE,MAAMC,UAAY,yBAC7BC,YAAW,WAAQJ,EAAWL,UAAUG,IAAI,oBAAqB,KAC1D,2BACAd,GADP,IAEIV,MAAOU,EAAMV,MAAMyB,OAAOd,EAAOgB,SAS7C,OAAOjB,K,OD9EPqB,EAAe,GAENC,EAAY,SAACC,GACxBC,aAAatC,GADuB,oBAEfmC,GAFe,IAEpC,2BAAmC,CAAC,IAAzBI,EAAwB,QACjCD,aAAaC,IAHqB,8BAMpCvC,EAAmBkC,YAAW,WAC5B,IADkC,EAC9BM,EAAaC,SAASC,iBAAiB,iBADT,cAEjBF,GAFiB,yBAEvBG,EAFuB,QAI9BA,IAAOH,EAAWH,IAClBG,EAAWH,GAASO,aAAeC,OAAOC,OAAOC,OAEjDZ,EAAaa,KACXd,YAAW,WACTS,EAAGX,MAAMe,OAAT,UAAqBP,EAAWH,GAASO,aAAzC,QACC,MAGDD,EAAGC,aAAeJ,EAAWH,GAASO,aACxCD,EAAGX,MAAMe,OAAT,UAAqBP,EAAWH,GAASO,aAAzC,MAEAT,EAAaa,KACXd,YAAW,WACTS,EAAGX,MAAMe,OAAT,gBACC,MAjBX,2BAA8B,IAFI,iCAwBjC,KEeUE,EA9CH,WAEV,SAASC,EAAUhC,GACjB,IAAMiC,EAAOV,SAASpB,cAAc,SAC9B+B,EAAYX,SAASpB,cAAc,uBAEzC8B,EAAKnB,MAAMqB,KAAOnC,EAAEoC,WAAa,KACjCH,EAAKnB,MAAMuB,MAAQrC,EAAEsC,YAAc,KAEf,YAAhBtC,EAAEuC,WACJL,EAAUpB,MAAM0B,UAAY,iBAC3BtB,EAAU,KAEXgB,EAAUpB,MAAM0B,UAAY,oBAC3BtB,EAAU,IAIf,OACE,yBAAKuB,UAAU,UACb,yCACA,6BACE,6BACE,4BACE,wBACEC,QAAS,SAAC1C,GACRgC,EAAUhC,EAAEC,UAFhB,WAOA,wBACEyC,QAAS,SAAC1C,GACRgC,EAAUhC,EAAEC,UAFhB,aAOA,yBAAKI,GAAG,cCkBLsC,eA1BS,SAAA/C,GAAK,MAAI,CAChCZ,KAAKY,EAAMZ,KACV4D,KAAKhD,EAAMH,UACXP,MAAMU,EAAMV,UAGa,SAAA2D,GAAQ,MAAI,CACvCC,YADuC,SAC3B9C,EAAEM,GACZuC,EAAS,CACP/C,KAAM,eACNE,IAAEM,SAINyC,QARuC,SAQ/B/C,EAAEa,GACRgC,EAAS,CACP/C,KAAM,WACNE,IAAEa,aASS8B,EAtDD,SAAC,GAAD,IAAE3D,EAAF,EAAEA,KAAK4D,EAAP,EAAOA,KAAK1D,EAAZ,EAAYA,MAAM4D,EAAlB,EAAkBA,YAAYC,EAA9B,EAA8BA,QAA9B,OACR,yBAAKN,UAAU,yBACd,wBAAI3B,MAAO,CAACkC,OAAO,SAAnB,WACD,yBAAKP,UAAU,mBACNzD,EAAKiE,KAAI,SAAC3C,GACN,IAAM4C,EAAMN,EAAKxC,MAAK,SAAAwC,GAAI,OAAIA,EAAKvC,KAAOC,EAAID,MACxCQ,EAAO3B,EAAMkB,MAAK,SAAAlB,GAAK,OAAIA,EAAMmB,KAAOC,EAAID,MAEnD,OACF,yBAAKoC,UAAU,OAAO3B,MAAO,CAACqC,WAAW7C,EAAI8C,WAAWC,IAAK/C,EAAID,IAC7D,4BAAKC,EAAIgD,MACT,yBAAKb,UAAU,aACT,yBAAKc,IAAKjD,EAAIkD,IAAKC,IAAKnD,EAAIgD,QAElC,yBAAKb,UAAU,cACf,yBAAKA,UAAU,iBAAiBC,QAAS,SAAA1C,GAAM+C,EAAQ/C,EAAEM,KAAzD,MAAmE,uBAAGmC,UAAW5B,EAAO,8BAAiC,iBAAzH,KACA,yBAAK4B,UAAU,iBAAiBC,QAAS,SAAA1C,GAAM8C,EAAY9C,EAAEM,KAA7D,KAAsE,yBAAKmC,UAAU,QAAO,uBAAGA,UAAU,eAAc,yBAAKA,UAAWS,EAAM,4BAA4B,gBAAnG,KAAtE,eCwCLP,eAfS,SAAA/C,GAAK,MAAI,CAChCH,UAAUG,EAAMH,cAGU,SAAAoD,GAAQ,MAAI,CAE7BrC,OAF6B,SAEtBF,GACNuC,EAAS,CACR/C,KAAK,SACLQ,YAMGqC,EAvDG,SAAC,GAAuB,IAAtBlD,EAAqB,EAArBA,UAAUe,EAAW,EAAXA,OAC5B,YAAoBkD,IAAjBjE,EAAU,GAET,yBAAKgD,UAAU,0BACf,wBAAI3B,MAAO,CAACkC,OAAO,SAAnB,aAEA,uBAAGlC,MAAO,CAACkC,OAAQ,aAAaX,MAAO,SAAvC,wCAQJ,yBAAKI,UAAU,0BACT,wBAAI3B,MAAO,CAACkC,OAAO,SAAnB,aAEA,yBAAKP,UAAU,mBAERhD,EAAUwD,KAAI,SAAC3C,GAEf,OAAS,yBAAKmC,UAAU,OAAO3B,MAAO,CAACqC,WAAW7C,EAAI8C,WAAWC,IAAK/C,EAAID,IACrE,4BAAKC,EAAIgD,MACT,yBAAKb,UAAU,aACT,yBAAKc,IAAKjD,EAAIkD,IAAKC,IAAKnD,EAAIgD,QAElC,yBAAKb,UAAU,eACb,4BAAQ3C,KAAK,SAAS4C,QAAS,SAAC1C,GAAOQ,EAAOF,GAAKY,EAAU,KAA7D,oBCCPyC,MA1Bf,WAaE,OAXAC,EAAMC,WAAU,YNWwB,SAACvD,GAC3C,IAAMwD,EAAcxE,KAAKyE,UAAUzD,GACnClB,aAAa4E,QAAQ,YAAYF,GMZ/BG,CAA2B,CACzBxE,UAAWmE,EAAMM,WAAWzE,YNcM,SAACa,GACvC,IAAMwD,EAAcxE,KAAKyE,UAAUzD,GACnClB,aAAa4E,QAAQ,QAAQF,GMb1BK,CAAuB,CACtBjF,MAAO0E,EAAMM,WAAWhF,WAMzB,kBAAC,IAAD,CAAU0E,MAAOA,GAEhB,kBAAC,EAAD,MACE,yBAAKnB,UAAU,sBACf,kBAAC,EAAD,MACA,kBAAC,EAAD,S,MCdc2B,QACW,cAA7BzC,OAAO0C,SAASC,UAEe,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnD,SAASoD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.973ca3df.chunk.js","sourcesContent":["export function loadStorageFavorites (){\n\tconst serializedState = localStorage.getItem('favorites')\n\tif(serializedState === null){\n\t\treturn {favorites:[]};\n\t}else{\n\t\treturn JSON.parse(serializedState)\n\t}\n}\n\nexport function loadStorageLike(){\n\tconst serializedState = localStorage.getItem('likes')\n\tif(serializedState === null){\n\t\treturn{likes:[]};\n\t}else{\n\t\treturn JSON.parse(serializedState)\n\t}\n}\n\n\n\nexport const saveFavoriteToLocalStorage = (img)=>{\nconst initialSave = JSON.stringify(img)\nlocalStorage.setItem('favorites',initialSave)\n}\n\nexport const saveLikeToLocalStorage = (img)=>{\nconst initialSave = JSON.stringify(img)\nlocalStorage.setItem('likes',initialSave)\n}","var waitingToRefresh;\nvar waitingToSet = [];\n\nexport const setScroll = (section) => {\n  clearTimeout(waitingToRefresh);\n  for (const timers of waitingToSet) {\n    clearTimeout(timers);\n  }\n\n  waitingToRefresh = setTimeout(() => {\n    let containers = document.querySelectorAll(\".sections-img\");\n    for (const el of containers) {\n      if (\n        el !== containers[section] &&\n        containers[section].scrollHeight < window.screen.height\n      ) {\n        waitingToSet.push(\n          setTimeout(() => {\n            el.style.height = `${containers[section].scrollHeight}px`;\n          }, 800)\n        );\n      } else {\n        if (el.scrollHeight > containers[section].scrollHeight) {\n          el.style.height = `${containers[section].scrollHeight}px`;\n        } else {\n          waitingToSet.push(\n            setTimeout(() => {\n              el.style.height = `fit-content`;\n            }, 20)\n          );\n        }\n      }\n    }\n  }, 10);\n};\n","import { createStore } from 'redux'\nimport pictures from './components/data/Pictures.json'\nimport { loadStorageLike, loadStorageFavorites } from './components/localStorage'\n\n\nconst initialState = {\n\n    imgs: pictures,\n\n    likes: loadStorageLike().likes,\n\n    favorites: loadStorageFavorites().favorites\n\n}\n\nconst reducerImages = (state = initialState, action) => {\n\n    const favorites = state.favorites\n\n    if (action.type === 'ADD_FAVORITE') {\n\n        const elm = action.e.target\n        const fill = elm.querySelector('.fill-after')\n\n        if (favorites.find((favorites) => favorites.id === action.img.id)) {\n            fill.classList.remove('fill-after-add')\n\n            return {\n                ...state,\n                favorites: state.favorites.filter(img => img.id !== action.img.id)\n            }\n        } else {\n\n            fill.classList.add('fill-after-add')\n            return {\n                ...state,\n                favorites: state.favorites.concat(action.img)\n\n            }\n\n        }\n    }\n\n    if (action.type === 'REMOVE') {\n        return {\n            ...state,\n            favorites: state.favorites.filter(img => img.id !== action.img.id)\n        }\n    }\n\n\n    if (action.type === 'ADD_LIKE') {\n        const likeButton = action.e.target\n        const likes = state.likes\n\n        if (likes.find((like) => like.id === action.like.id)) {\n            likeButton.classList.remove('fa-heart-after')\n            likeButton.style.animation = ''\n            return {\n                ...state,\n                likes: state.likes.filter(img => img.id !== action.like.id)\n            }\n\n\n        } else {\n\n            likeButton.style.animation = 'jump-heart 0.5s linear'\n            setTimeout(() => { likeButton.classList.add('fa-heart-after') }, 500)\n            return {\n                ...state,\n                likes: state.likes.concat(action.like)\n            }\n        }\n\n\n    }\n\n\n\n    return state\n\n}\n\n\n\n\n\nexport default createStore(reducerImages)","import React from \"react\";\nimport {setScroll} from './SomethingFunctions'\nconst Bar = () => {\n \n  function borderBar(e) {\n    const line = document.querySelector(\"#line\");\n    const container = document.querySelector(\".container-sections\");\n\n    line.style.left = e.offsetLeft + \"px\";\n    line.style.width = e.offsetWidth + \"px\";\n   \n    if (e.innerHTML === \"Explore\") {\n      container.style.transform = \"translateX(0%)\";\n       setScroll(0)\n    } else {\n      container.style.transform = \"translateX(-100%)\";\n       setScroll(1)\n    }\n  }\n\n  return (\n    <div className=\"header\">\n      <h1>Pic Store</h1>\n      <div>\n        <nav>\n          <ul>\n            <li\n              onClick={(e) => {\n                borderBar(e.target);\n              }}\n            >\n              Explore\n            </li>\n            <li\n              onClick={(e) => {\n                borderBar(e.target);\n              }}\n            >\n              Favorites\n            </li>\n            <div id=\"line\"></div>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Bar;\n\n","import React from 'react'\nimport {connect} from 'react-redux'\n\n\nconst Cards = ({imgs,favs,likes,addFavorite,addLike}) =>(\n      <div className=\"explore  sections-img\">\n       <h2 style={{margin:'20px'}}>Explore</h2>\n      <div className=\"container-cards\">\n             { imgs.map((img)=>{\n                   const fav = favs.find(favs => favs.id === img.id)\n                   const like = likes.find(likes => likes.id === img.id)\n                 \n                  return(\n                <div className=\"card\" style={{background:img.colorBack}}key={img.id} >\n                    <h3>{img.name}</h3>\n                    <div className=\"card-body\">\n                          <img src={img.url} alt={img.name}/>\n                    </div>\t\n                    <div className=\"card-after\">\n                    <div className=\"container-icon\" onClick={e => {addLike(e,img)}}>   <i className={like ? \"fas fa-heart fa-heart-after\" :  \"fas fa-heart\"}></i> </div>\n                    <div className=\"container-icon\" onClick={e => {addFavorite(e,img)}}>  <div className=\"fill\"><i className=\"fas fa-star\"><div className={fav ? \"fill-after fill-after-add\":\"fill-after\"}></div></i> </div> </div>\n                    </div>\n             \t</div>\n             \t)\n            })\n             \t\n             }\n      </div>\n      </div>\n\n\t)\n\nconst mapStateToProps = state =>({\n\timgs:state.imgs,\n  favs:state.favorites,\n  likes:state.likes\n})\n\nconst mapDispatchToProps = dispatch =>({\naddFavorite(e,img){\n  dispatch({\n    type: 'ADD_FAVORITE',\n    e,img\n  })\n},\n\naddLike(e,like){\n  dispatch({\n    type: 'ADD_LIKE',\n    e,like\n  })\n\n\n\n\n}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {setScroll} from './SomethingFunctions'\n\n//if nothing exist\nconst Favorites = ({favorites,remove}) =>{\n  if(favorites[0] === undefined){\n    return(\n      <div className=\"favorites sections-img\">\n      <h2 style={{margin:'20px'}}>Favorites</h2>\n \n      <p style={{margin: '215px auto',width: 'auto'}}>You have nothing added to favorites</p>\n    \n      </div>\n      )\n  }\n  \n  \n return (\n  <div className=\"favorites sections-img\">\n        <h2 style={{margin:'20px'}}>Favorites</h2>\n\n        <div className=\"container-cards\">\n\n             { favorites.map((img)=>{\n\n               return ( <div className=\"card\" style={{background:img.colorBack}}key={img.id} >\n                    <h3>{img.name}</h3>\n                    <div className=\"card-body\">\n                          <img src={img.url} alt={img.name}/>\n                    </div>  \n                    <div className=\"card-footer\">\n                      <button type=\"button\" onClick={(e) => {remove(img);setScroll(1)}}>Remove</button>\n                    </div>\n               </div>)\n\n             \t})\n             \t\n             }\n      </div>\n                         \n</div>\n)\n\t\n}\nconst mapStateToProps = state =>({\n\tfavorites:state.favorites\n})\n\nconst mapDispatchToProps = dispatch =>({\n          \n          remove(img){\n          \tdispatch({\n          \t\ttype:'REMOVE',\n          \t\timg\n          \t})\n          }\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Favorites)\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport Bar from './components/Bar'\nimport Cards from './components/Cards'\nimport Favorites from './components/Favorites'\nimport {saveFavoriteToLocalStorage,saveLikeToLocalStorage} from './components/localStorage'\nfunction App() {\n\n  store.subscribe(() => {\n  saveFavoriteToLocalStorage({\n    favorites: store.getState().favorites\n  })\n\n   saveLikeToLocalStorage({\n    likes: store.getState().likes\n  })\n\n})\n\n  return (\n  \t<Provider store={store}>\n\n    <Bar/>\n      <div className=\"container-sections\">\n      <Cards/>\n      <Favorites/>\n      </div>\n     \n    </Provider>\n  );\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './components/styles/style.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}